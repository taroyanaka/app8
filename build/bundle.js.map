{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/App3.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\n\t// tag周りの実装が汚いからリファクタリング(必要であればtag周辺全部スクラップ&ビルド)\n\n\n    let design_is_hidden = false;\n    let design_scroll_timeout;\n\n    function design_handle_scroll() {\n        design_is_hidden = true;\n        clearTimeout(design_scroll_timeout);\n        design_scroll_timeout = setTimeout(() => {\n            design_is_hidden = false;\n        }, 1000); // スクロールが止まった後に表示するまでの遅延時間（ミリ秒）\n    }\nwindow.addEventListener('scroll', design_handle_scroll);\n\t// all_tagsとFiltered by tagを同じタブ内に表示する\n\t// id表示をタイトルの右側に表示に位置変更, editボタンとlistボタンをトランジションで表示変化を試す\n\n\tlet design_active_tab = 'all_descs';\n\tfunction design_set_design_active_tab(tab) {\n        design_active_tab = tab;\n\n    }\n\n\n\tlet design_show_menu = false;\n\n    function design_toggle_menu() {\n        design_show_menu = !design_show_menu;\n    }\n    let design_show_modal = false;\n    let design_lang = \"en\";\n\n    function design_toggle_modal() {\n        design_show_modal = !design_show_modal;\n    }\n\nlet design_only_column = \"left\";\n// let design_only_column = \"right\";\n\nconst web_endpoint = 'https://cotton-concrete-catsup.glitch.me/app8';\n// const web_endpoint = 'http://localhost:8000/app8';\n\n\n// デザイン変える前にモバイル環境で本当に必要な見た目を確認する(そのためにプレリリース)\n// デザインをグリッドシステム準拠で変更\n\n\n// 命名規則(prefix)\n// auth => authentication関係の変数と関数\n// test => テスト用の変数と関数\n// design => デザイン関係の変数と関数\n// web => webデータの変数と関数\n// fetch => fetch関係の関数\n\n\nconst design_words = {\n\t\"auth_login_result\": {en:\"Log in result\", ja:\"ログイン結果\", zh:\"登录结果\", es:\"resultado de inicio de sesión\"},\n\t\"auth_sign_out\": {en:\"Sign out\", ja:\"サインアウト\", zh:\"登出\", es:\"Cerrar sesión\"},\n\t\"web_data_tags\": {en:\"Web data tags\", ja:\"ウェブデータタグ\", zh:\"网页数据标签\", es:\"Etiquetas de datos web\"},\n\t\"any_user_new_all_descs_with_tags\": {en:\"My data\", ja:\"自分のデータ\", zh:\"我的数据\", es:\"Mis datos\"},\n\t\"all_descs\": {en:\"All\", ja:\"すべて\", zh:\"所有\", es:\"Todos\"},\n\t\"filtered_all_descs\": {ja:\"絞り込み\", en:\"Filtered\", zh:\"过滤\", es:\"Filtrado\"},\n\t\"web_data_edit\": {en:\"Web data edit\", ja:\"ウェブデータ編集\", zh:\"网页数据编辑\", es:\"Edición de datos web\"},\n\t\"title\": {en:\"Title\", ja:\"タイトル\", zh:\"标题\", es:\"Título\"},\n\t\"description\": {en:\"Description\", ja:\"説明\", zh:\"描述\", es:\"Descripción\"},\n\t\"tag\": {en:\"Tag\", ja:\"タグ\", zh:\"标签\", es:\"Etiqueta\"},\n\t\"set_desc_data\": {en:\"Set\", ja:\"セット\", zh:\"设置\", es:\"Establecer\"},\n\t\"delete_desc\": {en:\"Delete\", ja:\"削除\", zh:\"删除\", es:\"Eliminar\"},\n\t\"confirm_delete_desc\": {ja: \"削除しますか？\", en: \"Delete?\", zh: \"删除？\", es: \"¿Eliminar?\"},\n\n\n\t\"add_tag_to_desc\": {en:\"Add tag to description\", ja:\"説明にタグを追加\", zh:\"添加标签到描述\", es:\"Agregar etiqueta a la descripción\"},\n\t\"update_desc\": {en:\"Update description\", ja:\"説明を更新\", zh:\"更新描述\", es:\"Actualizar descripción\"},\n\t\"insert_desc\": {en:\"Insert description\", ja:\"説明を挿入\", zh:\"插入描述\", es:\"Insertar descripción\"},\n\t\"clear_filtered_all_descs\": {ja: \"フィルターをクリア\", en: \"Clear filter\", zh: \"清除过滤器\", es: \"Borrar filtro\"},\n\n\t\"errors\": {en:\"Errors\", ja:\"エラー\", zh:\"错误\", es:\"Errores\"},\n\t\"is_auth_uid_valid\": {en:\"Invalid auth_uid\", ja:\"無効なauth_uid\", zh:\"无效的auth_uid\", es:\"auth_uid no válido\"},\n\t\"is_title_valid\": {ja: \"タイトルは1文字以上100文字以下\", en: \"Title must be between 1 and 100 characters\", zh: \"标题必须在1到100个字符之间\", es: \"El título debe tener entre 1 y 100 caracteres\"},\n\t\"is_description_valid\": {ja: \"説明は1文字以上1000文字以下\", en: \"Description must be between 1 and 1000 characters\", zh: \"描述必须在1到1000个字符之间\", es: \"La descripción debe tener entre 1 y 1000 caracteres\"},\n\t\"are_tags_valid\": {ja: \"タグは1文字以上10文字以下\", en: \"Tags must be between 1 and 10 characters\", zh: \"标签必须在1到10个字符之间\", es: \"Las etiquetas deben tener entre 1 y 10 caracteres\"},\n\t\"confirm_clear_title_description_tags\": {ja: \"タイトル、説明、タグをクリアしますか？\", en: \"Clear title, description, and tags?\", zh: \"清除标题、描述和标签吗？\", es: \"¿Borrar título, descripción y etiquetas?\"},\n\t\"clear_title_description_tags\": {ja: \"タイトル、説明、タグをクリア\", en: \"Clear title, description, and tags\", zh: \"清除标题、描述和标签\", es: \"Borrar título, descripción y etiquetas\"},\n\t\"sort\": {ja: \"並べ替え\", en: \"Sort\", zh: \"分类\", es: \"Clasificar\"},\n\n\t// \"left\": {ja: \"リスト表示\", en: \"List view\", zh: \"列表视图\", es: \"Vista de lista\"},\n\t\"left\": {ja: \"-\", en: \"-\", zh: \"-\", es: \"-\"},\n\t// \"right\": {ja: \"編集表示\", en: \"Edit view\", zh: \"编辑视图\", es: \"Vista de edición\"},\n\t\"right\": {ja: \"+\", en: \"+\", zh: \"+\", es: \"+\"},\n\t// \"select_language\": {ja: \"🇺🇸🇯🇵🇨🇳🇹🇼🇪🇸\", en: \"🇺🇸🇯🇵🇨🇳🇹🇼🇪🇸\", zh: \"🇺🇸🇯🇵🇨🇳🇹🇼🇪🇸\", es: \"🇺🇸🇯🇵🇨🇳🇹🇼🇪🇸\"},\n\t\"select_language\": {ja: \"言語を選択\", en: \"Select language\", zh: \"选择语言\", es: \"Seleccionar idioma\"},\n\n\n\n\n\t\"tab\": {ja: \"タブ\", en: \"Tab\", zh: \"标签\", es: \"Pestaña\"},\n\n}\n\n\n\nconst sort_kind = [\"id\",\"title\",\"description\",\"tags\",\"created_at\",\"updated_at\",];\nlet sort_kind_and_order = {kind: 'id', order: 'desc',};\nfunction sorter() {\ntry {\n    if (sort_kind_and_order.kind === null || sort_kind_and_order.order === null) return;\n    if (web_data.all_descs === undefined) return;\n    if (web_data.any_user_new_all_descs_with_tags === undefined) return;\n    const sort_function = (a, b) => {\n        switch (sort_kind_and_order.kind) {\n            case \"id\":\n                return sort_kind_and_order.order === \"asc\" ? a.id - b.id : b.id - a.id;\n            case \"title\":\n                return sort_kind_and_order.order === \"asc\" ? a.title.localeCompare(b.title) : b.title.localeCompare(a.title);\n            case \"description\":\n                return sort_kind_and_order.order === \"asc\" ? a.description.localeCompare(b.description) : b.description.localeCompare(a.description);\n            case \"tags\":\n                return sort_kind_and_order.order === \"asc\" ? a.tags.length - b.tags.length : b.tags.length - a.tags.length;\n            case \"created_at\":\n                return sort_kind_and_order.order === \"asc\" ? a.created_at.localeCompare(b.created_at) : b.created_at.localeCompare(a.created_at);\n            case \"updated_at\":\n                return sort_kind_and_order.order === \"asc\" ? a.updated_at.localeCompare(b.updated_at) : b.updated_at.localeCompare(a.updated_at);\n            default:\n                return 0;\n        }\n    };\n\n    const res_all_descs = web_data.all_descs.sort(sort_function);\n\tconst res_any_user_new_all_descs_with_tags = web_data.any_user_new_all_descs_with_tags.sort(sort_function);\n\n\tweb_data = {\n\t\t...web_data,\n\t\tall_descs: res_all_descs,\n\t\tany_user_new_all_descs_with_tags: res_any_user_new_all_descs_with_tags,\n\t};\n} catch (error) {\n\tconsole.error('Error:', error);\n}\n}\n\t\n\n\n// descのidを指定してデータを更新する関数\nlet new_tag = \"\";\nlet all_tags = [];\n\nlet desc_id = null;\nlet title = \"\";\nlet description = \"\";\nlet tags = [];\nlet filter_tag_id_ary = [];\nlet filtered_all_descs = [];\n\nlet errors = [];\n// const test_mode = true;\nconst test_mode = false;\nlet auth_login_result = 'Not logged in';\nlet web_data = \t{\n\t\"all_descs\": [],\n\t\"all_tags\": [],\n\t\"any_user_new_all_descs_with_tags\": [],\n\t\"filtered_all_descs\": [],\t\n};\nlet other_data = {};\nlet web_data_with_title = [];\nlet auth_uid = '';\nlet design_show_full_description = false;\n\nfunction clear_title_description_tags({with_confirm = true} = {}) {\n\tif (with_confirm) {\n\t\tif (confirm(design_words[\"confirm_clear_title_description_tags\"][design_lang])) {\n\t\ttitle = ''; description = ''; tags = []; desc_id = null;\n\t\t}\n\t} else {\n\t\ttitle = ''; description = ''; tags = []; desc_id = null;\n\t}\n}\nfunction design_toggle_description() {\n\tdesign_show_full_description = !design_show_full_description;\n}\nfunction add_tag_to_desc(desc_id, tag_name) {\n\ttry {\n\t\tconsole.log('add_tag_to_desc', desc_id, tag_name);\n// valid\n// errorsの中のtagのエラーを削除(design_words[\"are_tags_valid\"]のいずれかが含まれるエラーを削除)\nconsole.log(errors);\nerrors = errors.filter(error => !error.includes(design_words[\"are_tags_valid\"][design_lang]));\nconsole.log(errors);\n\n\t\tif (!validators.validate_tag_name(tag_name)) {\n\t\t\t// errors.push('Invalid tag name');\n\t\t\tconsole.log(3);\n\t\t\terrors.push(design_words[\"are_tags_valid\"][design_lang]);\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log(4);\n\n\t\t// tag_nameからtag_idを取得\n\t\tconst tag_in_all_tags = all_tags.find(tag => tag.name === tag_name);\n\t\tconsole.log(tag_in_all_tags);\n\t\tconsole.log(5);\n\t\t// tagsに存在しないtag_nameの場合はtagsに追加。存在する場合は追加しない\n\t\tif (tag_in_all_tags) {\n\t\t\tconsole.log(6);\n\t\t\ttag_in_all_tags.desc_id = desc_id;\n\t\t\tconsole.log(tag_in_all_tags.desc_id, desc_id);\n\t\t\tconsole.log(7);\n\t\t\tconst tag_already_exists = tags.some(tags_tag => tags_tag.id === tag_in_all_tags.id);\n\t\t\tconsole.log(tag_already_exists);\n\t\t\tif (!tag_already_exists) {\n\t\t\t\ttags = [...tags, tag_in_all_tags];\n\t\t\t}\n\t\t\t// tagのinputを空にする\n\t\t\tnew_tag = \"\";\n\t\t} else {\n\t\t\t// If the tag does not exist, create a new tag and add it to the tags array\n\t\t\tconst newTag = {\n\t\t\t\tid: all_tags.length + 1, // Assuming id is incremental\n\t\t\t\tname: tag_name,\n\t\t\t\tdesc_id: desc_id,\n\t\t\t\tcreated_at: new Date().toISOString(),\n\t\t\t\tupdated_at: new Date().toISOString()\n\t\t\t};\n\t\t\tall_tags = [...all_tags, newTag];\n\t\t\ttags = [...tags, newTag];\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('Error:', error);\n\t}\n}\nfunction set_desc_data(id){\ntry {\nconst desc = web_data.all_descs.find(desc => desc.id === id);\nif (desc) {\n\tdesc_id = desc.id;\n\ttitle = desc.title;\n\tdescription = desc.description;\n\ttags = desc.tags;\n} else {\n\tconsole.error(`No description found with id: ${id}`);\n}\n// right_columnに移動\ndesign_only_column = \"right\";\n} catch (error) {\n\tconsole.error('Error:', error);\t\n}\n}\nfunction filtering_by_tag(tag_id) {\n\tconst tag_id_exists = filter_tag_id_ary.some(id => id === tag_id);\n\tif (!tag_id_exists) {\n\t\tfilter_tag_id_ary = [...filter_tag_id_ary, tag_id];\n\t}\n\tconst filtered_all_descs = web_data.all_descs.filter(desc => {\n\t\tconst tag_id_exists = desc.tags.some(tag => filter_tag_id_ary.some(id => id === tag.id));\n\t\treturn tag_id_exists;\n\t});\n\tweb_data['filtered_all_descs'] = filtered_all_descs;\n\t// tabをfiltered_all_descsに変更\n\tdesign_active_tab = 'filtered_all_descs';\n\n}\nasync function clear_filtered_all_descs(){\n\tweb_data['filtered_all_descs'] = [];\n\tfilter_tag_id_ary = [];\n}\n// 指定したidをfilter_tag_id_aryから削除\nfunction remove_filter_tag_id(tag_id) {\n\tfilter_tag_id_ary = filter_tag_id_ary.filter(id => id !== tag_id);\n\tweb_data['filtered_all_descs'] = web_data['filtered_all_descs'].filter(desc => {\n\t\tconst tag_id_exists = desc.tags.some(tag => filter_tag_id_ary.some(id => id === tag.id));\n\t\treturn tag_id_exists;\n\t});\n}\n\nasync function init_and_sample_insert(){\ntry {\n\tfor(const data of test_sample_data) {\n\t\tauth_uid = data.auth_uid;\n\t\tdesc_id = data.desc_id;\n\t\ttitle = data.title;\n\t\tdescription = data.description;\n\t\ttags = data.tags;\n\t\tawait fetch_insert_desc();\n\t}\n} catch (error) {\n\tconsole.error('Error:', error);\n}\n}\nconst validators = {\n\tvalidate_auth_uid(uid) {\n\t\tconst uidRegex = /^[a-zA-Z0-9_-]+$/;\n\t\treturn uidRegex.test(uid);\n\t},\n\tvalidate_desc_id(id) {\n\t\tconsole.log('validate_desc_id', id);\n\t\treturn Number.isInteger(id) && id > 0;\n\t},\n\tvalidate_iso_date(date) {\n\t\tconst isoDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/;\n\t\treturn isoDateRegex.test(date);\n\t},\n\tvalidate_title(title) {\n\t\tconsole.log('validate_title', title);\n\t\treturn typeof title === 'string' && title.length >= 1 && title.length <= 100;\n\t},\n\tvalidate_description(description) {\n\t\tconsole.log('validate_description', description);\n\t\treturn typeof description === 'string' && description.length >= 1 && description.length <= 1000;\n\t},\n\tvalidate_tag_name(name) {\n\t\tconsole.log(1);\n\t\tconsole.log('validate_tag_name', name);\n\t\tconsole.log(2);\n\t\treturn typeof name === 'string' && name.length >= 1 && name.length <= 10;\n\t},\n\tvalidate_data(data) {\n\t\tconst { auth_uid, desc_id, title, description, tags } = data;\n\n\t\t// const is_desc_id_valid = this.validate_desc_id(desc_id);\n\n\t\tconst is_auth_uid_valid = this.validate_auth_uid(auth_uid);\n\t\tconst is_title_valid = this.validate_title(title);\n\t\tconst is_description_valid = this.validate_description(description);\n\t\tconsole.log('tags', tags);\n\t\tconst are_tags_valid = tags.every(tag => this.validate_tag_name(tag.name));\n\t\t\n\t\treturn {\n\t\t\tis_auth_uid_valid,\n\t\t\tis_title_valid,\n\t\t\tis_description_valid,\n\t\t\tare_tags_valid\n\t\t};\n\t},\n};\nfunction valid_all(){\n    const valid_data = {\n        \"auth_uid\": auth_uid,\n        \"desc_id\": desc_id,\n        \"title\": title,\n        \"description\": description,\n        \"tags\": tags,\n    };\n    errors = [];\n    // 全部のバリデーションを行い結果をerrorsに追加\n    for(const [key, value] of Object.entries(validators.validate_data(valid_data))) {\n        if(!value) {\n            // errors.push(key);\nerrors.push(design_words[key][design_lang]);\n        }\n        if(key === \"tags\"){\n            for(const [index, tag] of value.entries()) {\n                for(const [key, value] of Object.entries(validators.validate_data(tag))) {\n                    if(!value) {\n                        errors.push(`tags[${index}].${key}`);\n                    }\n                }\n            }\n        }else{\n            key === \"auth_uid\" ? validators.validate_auth_uid(auth_uid) : null;\n            key === \"desc_id\" ? validators.validate_desc_id(desc_id) : null;\n            key === \"title\" ? validators.validate_title(title) : null;\n            key === \"description\" ? validators.validate_description(description) : null;\n        }\n    }\n    if(errors.length > 0) {\n        console.log(errors);\n        return false;\n    }\n    return true;\n}\nasync function fetch_insert_desc() {\ntry {\n\tif(!valid_all()) throw new Error('Validation failed');\n\tconst response = await fetch(web_endpoint+ '/insert_desc', {method: 'POST',headers: {'Content-Type': 'application/json'},\n\t\tbody: JSON.stringify({\n\t\t\tauth_uid: auth_uid,\n\t\t\ttitle: title,\n\t\t\tdescription: description,\n\t\t\ttags: tags\n\t\t})\n\t});\n\tawait fetch_get_all_sequnce(response);\n\tdesign_only_column = \"left\";\n\tdesign_active_tab = 'all_descs';\n\tclear_title_description_tags({with_confirm: false});\n} catch (error) {\n\tconsole.error('Error:', error);\n}\n}\nasync function fetch_init_db() {\n\ttry {\n\t\tconst response = await fetch(web_endpoint+ '/init_db', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t});\n\t\tconst data = await response.json();\n\t\tconsole.log(data);\n\t} catch (error) {\n\t\tconsole.error('Error:', error);\n\t}\n}\nasync function fetch_get_all_sequnce(Response) {\ntry {\n\tconst data = await Response.json();\n\t// dataにfiltered_all_descsを追加(既存のfiltered_all_descsがあればそれを保存)\n\tdata['filtered_all_descs'] = web_data['filtered_all_descs'] ? web_data['filtered_all_descs'] : [];\n\n\t// dataからall_descs, all_tags, any_user_new_all_descs_with_tags,以外のデータをother_dataに分離\n\tother_data = Object.fromEntries(Object.entries(data).filter(([key, _]) => key !== 'all_descs' && key !== 'all_tags' && key !== 'any_user_new_all_descs_with_tags'));\n\t// all_descs, all_tags, any_user_new_all_descs_with_tagsをweb_dataに追加(それ以外のプロパティはweb_dataに追加しない)\n\tweb_data = Object.fromEntries(Object.entries(data).filter(([key, _]) => key === 'all_descs' || key === 'all_tags' || key === 'any_user_new_all_descs_with_tags' || key === 'filtered_all_descs'));\n\n\tall_tags = data.all_tags;\n\tsorter();\n} catch (error) {\n\tconsole.error('Error:', error);\n}\n}\nasync function fetch_get_all_descs_and_tags() {\ntry {\n\tconst response = await fetch(web_endpoint + '/', {method: 'POST', headers: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tauth_uid: auth_uid\n\t\t\t})\n\t});\n\tawait fetch_get_all_sequnce(response);\n} catch (error) {\n\tconsole.error('Error:', error);\n}\n}\nasync function fetch_update_desc() {\ntry {\n\tif(!valid_all()) {\n\t\tthrow new Error('Validation failed');\n\t}\n\tconst response = await fetch(web_endpoint + '/update_desc', {method: 'POST',headers: {'Content-Type': 'application/json'},\n\t\tbody: JSON.stringify({\n\t\t\tauth_uid: auth_uid,\n\t\t\tdesc_id: desc_id,\n\t\t\ttitle: title,\n\t\t\tdescription: description,\n\t\t\ttags: tags\n\t\t})\n\t});\n\tawait fetch_get_all_sequnce(response);\n\tdesign_only_column = \"left\";\n\tdesign_active_tab = 'all_descs';\n\tclear_title_description_tags({with_confirm: false});\n} catch (error) {\n\tconsole.error('Error:', error);\n}\n}\nasync function fetch_delete_desc(id) {\ntry {\n\tif (!confirm(design_words[\"confirm_delete_desc\"][design_lang])) {\n\t\treturn;\n\t}\n\tconst response = await fetch(web_endpoint + '/delete_desc', {method: 'POST',headers: {'Content-Type': 'application/json'},\n\t\tbody: JSON.stringify({\n\t\t\tid: id,\n\t\t\tauth_uid: auth_uid\n\t\t})\n\t});\n\tawait fetch_get_all_sequnce(response);\n} catch (error) {\n\tconsole.error('Error:', error);\n}\n}\n\nconst test_all_validation_fn = {\n\tvalidateUser: (uid) => {\n\t\tconst errors = [];\n\t\tconst uidRegex = /^[a-zA-Z0-9_-]{28}$/; // Google Firebase Authentication UID format\n\t\tif (!uidRegex.test(uid)) {\n\t\t\terrors.push('Invalid UID format');\n\t\t}\n\t\treturn errors;\n\t},\n}\nconst auth_firebase_config = {\n\tapiKey: \"AIzaSyBcOlIDP2KWbJuKM0WeMHNp-WvjTVfLt9Y\",\n\tauthDomain: \"p2auth-ea50a.firebaseapp.com\",\n\tprojectId: \"p2auth-ea50a\",\n\tstorageBucket: \"p2auth-ea50a.appspot.com\",\n\tmessagingSenderId: \"796225429484\",\n\tappId: \"1:796225429484:web:ece56ef2fc0be28cd6eac9\"\n}\nfirebase.initializeApp(auth_firebase_config);\nconst auth_google_provider = new firebase.auth.GoogleAuthProvider();\nasync function auth_check_login() {\n\ttry {\n\n\t\tconst current_user = await new Promise((resolve, reject) => {\n\t\t\tfirebase.auth().onAuthStateChanged(resolve, reject);\n\t\t});\n\t\tconsole.log('Current user:', current_user);\n\t\n\t\tconst auth_user = current_user;\n\t\tif (auth_user) {\n\t\t\tauth_uid = auth_user.uid;\n\t\t\tauth_login_result = 'Logged in';\n\t\t} else {\n\t\t\tconsole.log(2);\n\t\t\tauth_login_result = 'Not logged in';\n\t\t\tauth_uid = '';\n\t\t}\n\t\tif(test_mode) auth_login_result = 'Logged in';\n\t} catch (error) {\n\t\tconsole.error('Error during authentication:', error);\n\t\tauth_login_result = 'Authentication failed';\n\t\tauth_uid = \"\";\n\t}\n}\nasync function auth_google_login() {\n\ttry {\n\t\tconsole.log('auth_google_login');\n\t\tconst result = await firebase.auth().signInWithPopup(auth_google_provider);\n\t\tconst auth_user = result.user;\n\t\tconsole.log(4);\n\t\tauth_login_result = `Logged in as: ${auth_user.displayName}`;\n\t} catch (error) {\n\t\tconsole.error('Error during Google login:', error);\n\t\talert('Google login failed. ' + error.message);\n\t}\n}\nasync function auth_sign_out() {\n\ttry {\n\t\tconsole.log(5);\n\t\tawait firebase.auth().signOut();\n\t\tauth_login_result = 'Not logged in';\n\t} catch (error) {\n\t\tconsole.error('Error during sign-out:', error);\n\t\talert('Sign out failed. ' + error.message);\n\t}\n}\n// 3つのテストデータを作成\nconst test_sample_data = [\n\t{\n\t\t\"auth_uid\": \"user1\",\n\t\t\"desc_id\": 1,\n\t\t\"created_at\": \"2024-09-01T00:00:00\",\n\t\t\"updated_at\": \"2024-09-01T00:00:00\",\n\t\t\"title\": \"foo1\",\n\t\t\"description\": \"bar1\",\n\t\t\"tags\": [\n\t\t\t{ \"desc_id\": 1, \"id\": 1, \"name\": \"tag1\", \"created_at\": \"2024-09-01T00:00:00\", \"updated_at\": \"2024-09-01T00:00:00\" },\n\t\t\t{ \"desc_id\": 1, \"id\": 2, \"name\": \"tag2\", \"created_at\": \"2024-09-01T00:00:00\", \"updated_at\": \"2024-09-01T00:00:00\" },\n\t\t\t{ \"desc_id\": 1, \"id\": 3, \"name\": \"tag3\", \"created_at\": \"2024-09-01T00:00:00\", \"updated_at\": \"2024-09-01T00:00:00\" }\n\t\t]\n\t},\n\t{\n\t\t\"auth_uid\": \"user1\",\n\t\t\"desc_id\": 2,\n\t\t\"created_at\": \"2024-09-01T00:00:00\",\n\t\t\"updated_at\": \"2024-09-01T00:00:00\",\n\t\t\"title\": \"foo2\",\n\t\t\"description\": \"bar2\",\n\t\t\"tags\": [\n\t\t\t{ \"desc_id\": 2, \"id\": 1, \"name\": \"tag1\", \"created_at\": \"2024-09-01T00:00:00\", \"updated_at\": \"2024-09-01T00:00:00\" },\n\t\t\t{ \"desc_id\": 2, \"id\": 2, \"name\": \"tag2\", \"created_at\": \"2024-09-01T00:00:00\", \"updated_at\": \"2024-09-01T00:00:00\" },\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"auth_uid\": \"user2\",\n\t\t\t\"desc_id\": 3,\n\t\t\t\"created_at\": \"2024-09-01T00:00:00\",\n\t\t\t\"updated_at\": \"2024-09-01T00:00:00\",\n\t\t\t\"title\": \"foo3\",\n\t\t\t\"description\": \"bar3\",\n\t\t\t\"tags\": [\n\t\t\t\t{ \"desc_id\": 3, \"id\": 2, \"name\": \"tag2\", \"created_at\": \"2024-09-01T00:00:00\", \"updated_at\": \"2024-09-01T00:00:00\" },\n\t\t\t\t{ \"desc_id\": 3, \"id\": 3, \"name\": \"tag3\", \"created_at\": \"2024-09-01T00:00:00\", \"updated_at\": \"2024-09-01T00:00:00\" }\n\t\t\t]\n\t\t}\n];\n// 境界値テストデータ\nconst boundary_test_data = [\n\t{\n\t\t\"auth_uid\": \"user1\",\n\t\t\"desc_id\": 4,\n\t\t\"created_at\": \"2024-09-01T00:00:00\",\n\t\t\"updated_at\": \"2024-09-01T00:00:00\",\n\t\t\"title\": \"a\".repeat(100), // 最大長\n\t\t\"description\": \"b\".repeat(1000), // 最大長\n\t\t\"tags\": [\n\t\t\t{ \"desc_id\": 4, \"id\": 4, \"name\": \"tag4\", \"created_at\": \"2024-09-01T00:00:00\", \"updated_at\": \"2024-09-01T00:00:00\" }\n\t\t]\n\t},\n\t{\n\t\t\"auth_uid\": \"user1\",\n\t\t\"desc_id\": 5,\n\t\t\"created_at\": \"2024-09-01T00:00:00\",\n\t\t\"updated_at\": \"2024-09-01T00:00:00\",\n\t\t\"title\": \"\", // 最小長\n\t\t\"description\": \"\", // 最小長\n\t\t\"tags\": [\n\t\t\t{ \"desc_id\": 5, \"id\": 5, \"name\": \"t\".repeat(10), \"created_at\": \"2024-09-01T00:00:00\", \"updated_at\": \"2024-09-01T00:00:00\" } // 最大長\n\t\t]\n\t}\n];\n// 境界値テストを実行\nfunction run_boundary_tests() {\n\tconst index = 1;\n\ttitle = boundary_test_data[index].title;\n\tdescription = boundary_test_data[index].description;\n\ttags = boundary_test_data[index].tags;\n\tfetch_insert_desc();\n};\nfunction design_scroll_to_id() {\n\t// URLに#Nのようなidが存在する場合指定したid(#id)の要素にスクロールする\n\tif (location.hash) {\n\t\tconst id = location.hash.slice(1);\n\t\tconst element = document.getElementById(id);\n\t\tif (element) {\n\t\t\telement.scrollIntoView({ behavior: 'smooth' });\n\t\t}\n\t}\n}\nfunction copy_link(id) {\n\tnavigator.clipboard.writeText(`${window.location.href.split('#')[0]}#${id}`);\n\talert('Link copied to clipboard');\n}\n\n$: (async () => {\n\tif (design_only_column === \"left\") {\n            document.documentElement.style.setProperty('--display-left-column', 'block');\n            document.documentElement.style.setProperty('--display-right-column', 'none');\n        } else if (design_only_column === \"right\") {\n            document.documentElement.style.setProperty('--display-left-column', 'none');\n            document.documentElement.style.setProperty('--display-right-column', 'block');\n        }\n})();\n\nimport { onMount } from \"svelte\";\n\nonMount(async () => {\n\tawait auth_check_login();\n\tconsole.log(\"auth_check_login\");\n\tawait fetch_get_all_descs_and_tags();\n\tconsole.log(\"fetch_get_all_descs_and_tags\");\n\tdesign_scroll_to_id();\n\t// My dataをクリック\n\t// design_active_tab = 'any_user_new_all_descs_with_tags';\n\t// right_columnに移動\n\t// design_only_column = \"right\";\n\n});\n</script>\n\n<style>\n    :root {\n        --display-left-column: none;\n        --display-right-column: none;\n        --chars-per-100vw: 39ch;\n        --mobile-font-size: 8px;\n    }\n\n    /* メディアクエリでipad以下のサイズは--mobile-font-sizeを適用 */\n    @media (max-width: 1024px) {\n        :root {\n            font-size: var(--mobile-font-size);\n        }\n    }\n\n    .hidden_when_scroll {\n        display: none;\n    }\n\n    /* menu_listの上の要素 */\n    .header {\n        display: flex;\n        justify-content: space-between;\n        width: 100%;\n        position: relative;\n    }\n\n    .design_toggle_menu {\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n\n    .menu_list {\n        display: block;\n        position: absolute;\n        top: 0rem;\n        right: 10px;\n        background-color: white;\n        border: 1px solid #ccc;\n        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    }\n\n    .modal {\n        display: block;\n        position: fixed;\n        z-index: 1;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        overflow: auto;\n        background-color: rgba(0, 0, 0, 0.4);\n    }\n\n    .modal-content {\n        background-color: #fefefe;\n        padding: 20px;\n        border: 1px solid #888;\n\t\twidth: 50%;\n\t\theight: 10rem;\n    }\n\n    .close {\n        color: #aaa;\n        float: right;\n        font-size: 28px;\n        font-weight: bold;\n    }\n\n    .close:hover,\n    .close:focus {\n        color: black;\n        text-decoration: none;\n        cursor: pointer;\n    }\n\n    .left_column {\n        display: var(--display-left-column);\n    }\n\n    .right_column {\n        display: var(--display-right-column);\n    }\n\n    .button_reset {\n        background: none;\n        border: none;\n        padding: 0;\n        font: inherit;\n        color: inherit;\n        cursor: pointer;\n        font-size: 16px;\n    }\n\n    .break_word {\n        word-break: break-all;\n        word-wrap: break-word;\n        overflow-wrap: break-word;\n    }\n\n    .break_word_title {\n        word-break: break-all;\n        word-wrap: break-word;\n        overflow-wrap: break-word;\n    }\n\n    .title:invalid,\n    .description:invalid {\n        /* background-color: lightgray; */\n    }\n\n    .title:valid,\n    .description:valid {\n        /* background-color: palegreen; */\n    }\n\n    .container {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .content {\n        margin-top: 3rem;\n        display: flex;\n        width: 100%;\n    }\n\n    .left_column,\n    .right_column {\n        flex: 1;\n    }\n\n    .fetch_insert_desc_button,\n    .fetch_update_desc_button {\n        padding: 15px 32px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        border-radius: 0;\n        border: 0.08rem solid gray;\n    }\n\n    .title {\n        width: 100%;\n        height: 2rem;\n    }\n\n    .description {\n        width: 100%;\n        height: 17rem;\n    }\n\n    .list {\n        display: flex;\n        flex-direction: column;\n    }\n\n    /* 順序を変更するためのクラス */\n    .filtered_all_desc {\n        order: 5;\n    }\n\n    .all_descs {\n        order: 4;\n    }\n\n    .all_tags {\n        order: 2;\n    }\n\n\t.parent_tags, .desc_tags {\n\t\tdisplay: flex;\n\t\t/* justify-content: space-around; */\n\t\t/* justify-content: space-evenly; */\n\t\tjustify-content: start;\n\t\t/* background-color: palegoldenrod; */\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: 2rem;\n\t\trow-gap: 1rem;\n\n\t}\n\n\t.tag {\n\t\t/* この要素同士の隙間を作る(flexで) */\n\t\t\n\t\t/* background-color: red; */\n\t\t/* gap: 5rem; */\n\t\t/* column-gap: 1em; */\n\n\n\t}\n\n    .any_user_new_all_descs_with_tags {\n        order: 3;\n    }\n\n    .web_data_tags {\n        order: 1;\n    }\n\n    .edit_button,\n    .list_button {\n        position: fixed;\n        top: 0rem;\n        right: 0rem;\n        z-index: 1000;\n        width: 10rem;\n        height: 4rem;\n    }\n\n    .edit_button {\n        z-index: 100;\n    }\n\n    .tabs {\n        position: fixed;\n        bottom: 10px;\n        z-index: 10;\n        justify-content: space-around;\n        width: 100%;\n        display: flex;\n\t\tbackground-color: rgba(255, 255, 255, 0.8);\n    }\n\n    .tabs button {\n        border-right: 1px solid black;\n        border-bottom: none;\n        font-size: 1.2rem;\n        font-weight: bold;\n        flex: 1;\n        cursor: pointer;\n        text-align: center;\n    }\n\n    /* 最後の.tabs buttonはborder不要 */\n    .tabs button:last-child {\n        border-right: none;\n    }\n\n    /* button reset css */\n    /* ボタンをボタン的な表示でなくする */\n    button {\n        background: none;\n        border: none;\n        padding: 0;\n        font: inherit;\n        color: inherit;\n        cursor: pointer;\n        font-size: 16px;\n        border-bottom: 1px solid black;\n    }\n\n    /* 立体 / エンボスのボタンのスタイル */\n    .set_desc_data,\n    .fetch_delete_desc {\n        border-left: 1px solid #f1f1f1;\n        border-bottom: 1px solid #f1f1f1;\n        border-radius: 5px;\n        padding: 0.2rem 0.2rem;\n        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);\n        cursor: pointer;\n        transition: box-shadow 0.3s ease;\n    }\n\n    .set_desc_data:hover,\n    .fetch_delete_desc:hover {\n        box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.3);\n    }\n\n    .set_desc_data:active,\n    .fetch_delete_desc:active {\n        box-shadow: inset 1px 1px 1px rgba(0, 0, 0, 0.2);\n    }\n\n    .each_desc_border {\n        border-bottom: 1px solid #ccc;\n        position: relative;\n        margin-bottom: 4rem;\n    }\n\n    .id_and_set_delete {\n        position: absolute;\n        right: 0;\n        top: -1rem;\n        transform: translateY(-50%);\n        background-color: white;\n        padding: 0.5rem;\n    }\n\n    .id {\n        padding: 10px;\n        margin: 0 0;\n        font-size: 0.6rem;\n        font: lightgray;\n    }\n\n    h1 {\n        font-size: 1.2rem;\n    }\n\n    .title {\n        font-size: 1.2rem;\n    }\n\n    .description {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n\n    .active {\n        background-color: #ddd;\n    }\n\n    .hidden_when_scroll {\n        display: none;\n    }\n</style>\n\n\n\n<div class=\"container\">\n\n<div class=\"header\">\n\t<!-- columnをleft, rightを切り替えるラジオボタン -->\n\t<!-- <div>\n\t\t<input type=\"radio\" id=\"left\" name=\"design_only_column\" value=\"left\" bind:group={design_only_column} />\n\t\t<label for=\"left\">left</label>\n\t\t<input type=\"radio\" id=\"right\" name=\"design_only_column\" value=\"right\" bind:group={design_only_column} />\n\t\t<label for=\"right\">right</label>\n\t</div> -->\n\n\n<button class=\"design_toggle_menu\" on:click={design_toggle_menu}>≡</button>\n{#if design_show_menu}\n<div class=\"menu_list\">\n\t<button on:click={design_toggle_modal}>{design_words[\"select_language\"][design_lang]}</button>\n\n\t{#if design_show_modal}\n    <div class=\"modal\">\n        <div class=\"modal-content\">\n            <button class=\"close\" on:click={design_toggle_modal}>&times;</button>\n            <h2>{design_words[\"select_language\"][design_lang]}</h2>\n            <div>\n                <input type=\"radio\" id=\"en\" name=\"design_lang\" value=\"en\" bind:group={design_lang} />\n                <label for=\"en\">🇺🇸 English</label>\n                <input type=\"radio\" id=\"ja\" name=\"design_lang\" value=\"ja\" bind:group={design_lang} />\n                <label for=\"ja\">🇯🇵 日本語</label>\n                <input type=\"radio\" id=\"zh\" name=\"design_lang\" value=\"zh\" bind:group={design_lang} />\n                <label for=\"zh\">🇨🇳🇹🇼 中文</label>\n                <input type=\"radio\" id=\"es\" name=\"design_lang\" value=\"es\" bind:group={design_lang} />\n                <label for=\"es\">🇪🇸 Español</label>\n            </div>\n        </div>\n    </div>\n\t{/if}\n\n\t<!-- sort_kindとsort_orderを変更するボタン -->\n\t<div>\n\t\t<select bind:value={sort_kind_and_order.kind}>\n\t\t\t{#each sort_kind as kind}\n\t\t\t\t<option value={kind}>{kind}</option>\n\t\t\t{/each}\n\t\t</select>\n\t\t<select bind:value={sort_kind_and_order.order}>\n\t\t\t{#each [\"desc\", \"asc\"] as order}\n\t\t\t\t<option value={order}>{order}</option>\n\t\t\t{/each}\n\t\t</select>\n\t\t<button on:click={sorter}>{design_words[\"sort\"][design_lang]}</button>\n\t</div>\n\n\t<div class=\"version\">v1.2.1</div>\n\n\n\t<div>{design_words[\"auth_login_result\"][design_lang]}: <span>{auth_login_result}</span></div>\n\t{#if auth_uid === ''}\n\t<div>auth_google_login: <button on:click={auth_google_login}>auth_google_login</button></div>\n\t{/if}\n\t{#if auth_uid !== ''}\n\t<div><button on:click={auth_sign_out}>{design_words[\"auth_sign_out\"][design_lang]}</button></div>\n\t{/if}\n\n\n\t{#if test_mode}\n\t<div>auth_uid: {auth_uid}</div>\n\t<button on:click={run_boundary_tests}>run_boundary_tests</button>\n\t<button on:click={init_and_sample_insert}>init_and_sample_insert</button>\n\t<button on:click={fetch_init_db}>init_db</button>\n\t<button on:click={fetch_get_all_descs_and_tags}>get_all_descs_and_tags</button>\n\t{/if}\n</div>\n{/if}\n\n\n\n</div>\n\n<div class=\"content\">\n\t<div class=\"left_column server_side\">\n\t\t<div class=\"console\">\n\t\t{#if errors > 0}\n\t\t<p>Errors:</p>\n\t\t{#each errors as error}\n\t\t\t<div>{error}</div>\n\t\t{/each}\n\t\t{/if}\n\t\t</div>\n\n\t\t<div class=\"list\">\n\t\t\t<button class=\"edit_button {design_is_hidden ? 'hidden_when_scroll' : ''}\" on:click={() => design_only_column = \"right\"}>\n\t\t\t\t{design_words[\"right\"][design_lang]}\n\t\t\t</button>\n\n\n\n\n\n\t\t\t<div class=\"tabs\">\n\t\t\t{#each Object.keys(web_data) as tab}\n\t\t\t\t{#if tab !== \"all_tags\"}\n\t\t\t\t\t<button on:click={() => design_set_design_active_tab(tab)} class:active={design_active_tab === tab}>\n\t\t\t\t\t\t{design_words[tab] ? design_words[tab][design_lang] : tab}\n\t\t\t\t\t</button>\n\t\t\t\t{/if}\n\t\t\t{/each}\n\t\t\t\t\n\t\t\t</div>\n\n\t\t\t<div class=\"tab-content\">\n\t\t\t{#each Object.entries(web_data) as [key, value]}\n\t\t\t{#if key !== \"all_tags\"}\n\t\t\t{#if design_active_tab !== \"all_tags\" && design_active_tab === key}\n\t\t\t\t<div class={key}>\n<!-- <h1>{design_words[key][design_lang]}</h1> -->\n\t\t\t\t\t{#if key === \"filtered_all_descs\"}\n\t\t\t\t\tall_tags: \n\t\t\t\t\t<div class=\"parent_tags\">\n\t\t\t\t\t{#each all_tags as tag}\n\t\t\t\t\t\t<button class=\"tag\" on:click={() => filtering_by_tag(tag.id)}>{tag.name}</button>\n\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"each_desc_border\"></div>\n\n\n\n\t\t\t\t\t\t<button on:click={clear_filtered_all_descs}>{design_words[\"clear_filtered_all_descs\"][design_lang]}</button>\n\t\t\t\t\t\t{#each filter_tag_id_ary as tag_id}\n\t\t\t\t\t\t\t<div class=\"parent_tags\">\n\t\t\t\t\t\t\t{#each all_tags as tag}\n\t\t\t\t\t\t\t\t{#if tag.id === tag_id}\n\t\t\t\t\t\t\t\t\t<button class=\"tag\" on:click={() => remove_filter_tag_id(tag.id)}>{tag.name}</button>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#each value as desc}\n\t\t\t\t\t\t\t<div>\n<p class=\"title break_word_title\">{desc.title}</p>\n\t\t\t\t\t\t\t\t<p class=\"break_word\">\n\t\t\t\t\t\t\t\t\t<button class=\"button_reset break_word\" on:click={design_toggle_description}>\n<!-- {desc.description.length > get_chars_per_100vw(70) && !design_show_full_description ? desc.description.slice(0, get_chars_per_100vw(70)) + '...▼' : desc.description} -->\n{desc.description.length > 200 && !design_show_full_description ? desc.description.slice(0, 200) + '...▼' : desc.description}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t{#if desc.tags}\n\t\t\t\t\t\t\t\t<div class=\"desc_tags\">\n\t\t\t\t\t\t\t\t{#each desc.tags as tag}\n\t\t\t\t\t\t\t\t\t<button class=\"tag\" on:click={() => filtering_by_tag(tag.id)}>{tag.name}</button>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<!-- <p id={desc.id} class=\"id_and_set_delete\">\n\t\t\t\t\t\t\t\t<button class=\"id button_reset\" on:click={() => copy_link(desc.id)}>id: {desc.id}</button>\n\t\t\t\t\t\t\t\t{#if key === \"any_user_new_all_descs_with_tags\" && auth_uid}\n\t\t\t\t\t\t\t\t<button class=\"set_desc_data\" on:click={() => set_desc_data(desc.id)}>{design_words[\"set_desc_data\"][design_lang]}</button>\n\t\t\t\t\t\t\t\t<button class=\"fetch_delete_desc\" on:click={() => fetch_delete_desc(desc.id)}>{design_words[\"delete_desc\"][design_lang]}</button>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<div class=\"each_desc_border\"></div> -->\n\t\t\t\t\t\t\t<div class=\"each_desc_border\">\n\t\t\t\t\t\t\t\t<p id={desc.id} class=\"id_and_set_delete\">\n\t\t\t\t\t\t\t\t\t<button class=\"id button_reset\" on:click={() => copy_link(desc.id)}>id: {desc.id}</button>\n\t\t\t\t\t\t\t\t\t{#if key === \"any_user_new_all_descs_with_tags\" && auth_uid}\n\t\t\t\t\t\t\t\t\t\t<button class=\"set_desc_data\" on:click={() => set_desc_data(desc.id)}>{design_words[\"set_desc_data\"][design_lang]}</button>\n\t\t\t\t\t\t\t\t\t\t<button class=\"fetch_delete_desc\" on:click={() => fetch_delete_desc(desc.id)}>{design_words[\"delete_desc\"][design_lang]}</button>\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t{/if}\n\t\t\t\t{#if design_active_tab ===  \"all_tags\" && key === \"all_tags\"}\n\t\t\t\t<div class=\"web_data_tags\">\n\t\t\t\t\t<h1>{design_words[\"web_data_tags\"][design_lang]}</h1>\n\t\t\t\t\t{#if web_data.all_tags}\n\t\t\t\t\t<div class=\"parent_tags\">\n\t\t\t\t\t{#each web_data.all_tags as tag}\n\t\t\t\t\t\t<button class=\"tag\" on:click={() => filtering_by_tag(tag.id)}>{tag.name}</button>\n\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t\t{/if}\n\n\t\t\t{/each}\n\n\n\t\t\t\t\n\t\t\t</div>\n\n\n\n\n\n\n\n\n\t\t</div>\n\t</div>\n\n\t<div class=\"right_column\">\n\t\t<h1>{design_words[\"web_data_edit\"][design_lang]}</h1>\n\t\t<button class=\"list_button\" on:click={() => design_only_column = \"left\"}>{design_words[\"left\"][design_lang]}</button>\n\n\t\t{#if auth_uid !== ''}\n\t\t<!-- desc_idがnullの時は非表示 -->\n\t\t{#if desc_id !== null}\n\t\t<p>id: {desc_id}</p>\n\t\t{/if}\n\t\t<button on:click={() => clear_title_description_tags({with_confirm: true})}>{design_words[\"clear_title_description_tags\"][design_lang]}</button>\n\t\t<div>title: </div>\n\t\t<textarea class=\"title\" bind:value={title} minlength=\"1\" maxlength=\"100\" required placeholder=\"1_100\"></textarea>\n\t\t<div>description: </div>\n\t\t<textarea class=\"description\" bind:value={description} minlength=\"1\" maxlength=\"1000\" required placeholder=\"1_1000\"></textarea>\n\t\t<div>\n\t\t{#each tags as tag}\n\t\t\t<button on:click={() => tags = tags.filter(t => t.id !== tag.id)}>{tag.name}</button>\n\t\t{/each}\n\t\t</div>\n\n\t\t<label for=\"my_all_tags\">{design_words[\"tag\"][design_lang]}</label>\n\t\t<input list=\"all_tags\" id=\"my_all_tags\" name=\"my_all_tags\" bind:value={new_tag} minlength=\"1\" maxlength=\"10\" required placeholder=\"1_10\"/>\n\t\t<datalist id=\"all_tags\">\n\t\t{#each all_tags as tag}\n\t\t\t<option value={tag.name} />\n\t\t{/each}\n\t\t</datalist>\n\t\t<button on:click={() => add_tag_to_desc(desc_id, new_tag)}>{design_words[\"add_tag_to_desc\"][design_lang]}</button>\n\t\t{#if errors.length > 0}\n\t\t<h2>{design_words[\"errors\"][design_lang]}</h2>\n\n\t\t{#each errors as error}\n\t\t\t<p>{error}</p>\n\t\t{/each}\n\t\t{/if}\n\n\t\t{#if desc_id === null}\n\t\t<button on:click={fetch_insert_desc} class=\"fetch_insert_desc_button\">{design_words[\"insert_desc\"][design_lang]}</button>\n\t\t{/if}\n\t\t{#if desc_id !== null}\n\t\t<!-- desc_idがnullならupdate -->\n\t\t <!-- fetch_update_desc -->\n\t\t<button on:click={fetch_update_desc} class=\"fetch_update_desc_button\">{design_words[\"update_desc\"][design_lang]}</button>\n\t\t{/if}\n\n\n\t\t{/if}\n\t</div>\n</div>\n\n\n</div>","// import App from './App.svelte';\n// import App from './App2.svelte';\nimport App from './App3.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","select_option","select","mounting","option","__value","selected","undefined","selectedIndex","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","destroy_component","filtered","targets","c","indexOf","flush_render_callbacks","on_destroy","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","create_if_block_19","each_value_12","if_block1","create_if_block_18","if_block2","create_if_block_17","kind","call","select0","order","select1","div3","button0","div0","button1","div1","div2","span","t0","t0_value","t5","t5_value","t9","t9_value","group","_inputs","inputs","r","button","h2","input0","label0","input1","label1","input2","label2","input3","label3","t2","t2_value","div","t","t_value","if_block","create_if_block_13","create_if_block_8","create_if_block_11","t3","t3_value","id","create_if_block_12","each_value_6","tags","title","description","slice","t6_value","if_block0","create_if_block_10","create_if_block_9","p2","p2_id_value","p0","p1","t6","all_tags","create_if_block_6","h1","each_value_4","create_if_block_7","create_if_block_5","create_if_block_4","create_if_block_3","create_if_block_2","if_block3","create_if_block_1","textarea0","textarea1","label","datalist","t1","t1_value","t10","t10_value","t14","t14_value","option_value_value","create_if_block_15","create_if_block_14","entries","create_if_block","div8","div7","div5","div4","div6","button2","t4","t4_value","t8","t8_value","web_endpoint","design_scroll_timeout","design_is_hidden","window","$$invalidate","clearTimeout","setTimeout","design_active_tab","design_set_design_active_tab","tab","design_show_menu","design_show_modal","design_lang","design_only_column","design_words","auth_login_result","en","ja","zh","es","auth_sign_out","web_data_tags","any_user_new_all_descs_with_tags","all_descs","filtered_all_descs","web_data_edit","tag","set_desc_data","delete_desc","confirm_delete_desc","add_tag_to_desc","update_desc","insert_desc","clear_filtered_all_descs","errors","is_auth_uid_valid","is_title_valid","is_description_valid","are_tags_valid","confirm_clear_title_description_tags","clear_title_description_tags","sort","left","right","select_language","sort_kind","sort_kind_and_order","sorter","web_data","sort_function","localeCompare","created_at","updated_at","res_all_descs","res_any_user_new_all_descs_with_tags","error","console","new_tag","desc_id","filter_tag_id_ary","other_data","auth_uid","design_show_full_description","with_confirm","confirm","tag_name","log","includes","validators","validate_tag_name","tag_in_all_tags","find","tag_already_exists","some","tags_tag","newTag","Date","toISOString","desc","filtering_by_tag","tag_id","remove_filter_tag_id","validate_auth_uid","uid","test","validate_desc_id","Number","isInteger","validate_iso_date","date","validate_title","validate_description","validate_data","every","valid_all","valid_data","key","fetch_insert_desc","response","fetch","method","headers","body","JSON","stringify","fetch_get_all_sequnce","async","Response","json","fromEntries","_","fetch_get_all_descs_and_tags","fetch_delete_desc","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth_google_provider","auth","GoogleAuthProvider","test_sample_data","boundary_test_data","repeat","current_user","reject","onAuthStateChanged","auth_check_login","location","hash","getElementById","scrollIntoView","behavior","design_scroll_to_id","documentElement","style","setProperty","auth_user","signInWithPopup","user","displayName","alert","message","signOut","copy_link","navigator","clipboard","writeText","href","split"],"mappings":"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","x_google_ignoreList":[0]}